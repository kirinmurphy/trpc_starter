name: Cypress Tests

on: 
  push: 
    branches: ['main']
  pull_request:
    types: [opened, synchronize, reopened]

concurrency: 
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs: 
  cypress-tests:
    runs-on: ubuntu-latest

    env: 
      DB_NAME: ci_db
      TEST_DB_NAME: ci_db_cypress
      DB_USER: postgres
      DB_PASSWORD: password1
      AUTH_TOKEN_SECRET: test-secret
      REFRESH_TOKEN_SECRET: test-refresh-secret
      VITE_PORT: 5173
      DOCKER_COMPOSE_CMD: "docker compose -f docker-compose.base.yml -f docker-compose.dev.yml -f docker-compose.cypress.yml"
      EMAIL_SERVICE_SYSTEM_EMAIL_ADDRESS: noreply@codethings.net
      EMAIL_SERVICE_SYSTEM_EMAIL_SENDER: codethings.net

    steps: 
      - uses: actions/checkout@v4

      - name: Install make
        run: sudo apt-get install -y make

      - name: Build test containers
        run: make build-tests

      # Start containers in detached mode
      - name: Start test environment
        run: |
          $DOCKER_COMPOSE_CMD up -d
          sleep 10  # Give containers time to be fully ready

      # Debug setup before tests
      - name: Initial container state
        run: |
          echo "Container Status:"
          $DOCKER_COMPOSE_CMD ps
          echo "\nMailhog Logs:"
          $DOCKER_COMPOSE_CMD logs mailhog
          echo "\nApp Logs:"
          $DOCKER_COMPOSE_CMD logs app
          echo "\nNetwork Test:"
          $DOCKER_COMPOSE_CMD exec app curl -v mailhog:8025/api/v2/messages

      # Run tests
      - name: Run Cypress tests
        run: $DOCKER_COMPOSE_CMD up --exit-code-from cypress --abort-on-container-exit

      # Debug state after tests
      - name: Final state
        if: always()
        run: |
          echo "Final Container Status:"
          $DOCKER_COMPOSE_CMD ps
          echo "\nFinal Mailhog Logs:"
          $DOCKER_COMPOSE_CMD logs mailhog
          echo "\nFinal App Logs:"
          $DOCKER_COMPOSE_CMD logs app

      - name: Upload test artifacts 
        if: always()
        uses: actions/upload-artifact@v3
        with: 
          name: cypress-results
          path: |
            cypress/videos
            cypress/screenshots

      - name: Cleanup
        if: always()
        run: |
          $DOCKER_COMPOSE_CMD down -v
