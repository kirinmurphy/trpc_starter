x-network-config: &network-config
  networks:
    - app_network

services:
  app:
    <<: *network-config
    build:
      context: .
      args:
        DOCKER_BUILDKIT: 1
    expose:
      - '3000'
    depends_on:
      db:
        condition: service_healthy
    environment:
      PORT: '3000'

      # DB
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}

      # AUTH
      AUTH_TOKEN_SECRET: ${AUTH_TOKEN_SECRET}
      REFRESH_TOKEN_SECRET: ${REFRESH_TOKEN_SECRET}

      # EMAIL
      VITE_EMAIL_ADDRESS_SUPPORT: ${VITE_EMAIL_ADDRESS_SUPPORT:-support@${WEBSITE_DOMAIN:-localhost}}
    healthcheck:
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 60s

  db:
    image: postgres:latest
    <<: *network-config
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USER} -d ${DB_NAME}']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  nginx:
    image: nginx:alpine
    <<: *network-config
    deploy:
      resources:
        limits:
          memory: ${NGINX_MEMORY_LIMIT:-512M}
          cpus: ${NGINX_CPU_LIMIT:-0.25}
    environment:
      AUTH_RATE: '${AUTH_RATE:-10r/m}'
      VERIFY_RATE: '${VERIFY_RATE:-5r/m}'
      ALLOWED_ORIGINS: '${ALLOWED_ORIGINS:-http://localhost,http://localhost:3000}'
    command: sh -c "cp ./docker/init-nginx.sh /tmp/init-nginx.sh && chmod +x /tmp/init-nginx.sh && /tmp/init-nginx.sh"
    ports:
      - '${NGINX_HTTPS_PORT:-443}:443'
      - '${NGINX_HTTP_PORT:-80}:80'
    volumes:
      - ./docker:/docker
      - ./nginx/includes:/etc/nginx/includes
      - ./nginx/templates:/etc/nginx/templates:ro
      - ./nginx/nginx.conf:/etc/nginx/conf:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      app:
        condition: service_healthy
    healthcheck:
      test:
        [
          'CMD',
          '/bin/sh',
          './docker/app-health-check.sh',
          'http://localhost:80/ping',
        ]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data:
