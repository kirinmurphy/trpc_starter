x-network-config: &network-config
  networks: 
    - app_network  
    
services: 
  app: 
    <<: *network-config  

  db: 
    image: postgres:latest
    <<: *network-config   
    volumes:
      - postgres_data:/var/lib/postgresql/data    
    healthcheck: 
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  nginx: 
    image: nginx:alpine
    <<: *network-config
    deploy:
      resources:
        limits:
          memory: ${NGINX_MEMORY_LIMIT:-512M}
          cpus: ${NGINX_CPU_LIMIT:-0.25}
    environment: 
      AUTH_RATE: "${AUTH_RATE:-10r/m}"
      VERIFY_RATE: "${VERIFY_RATE:-3r/m}"
      ALLOWED_ORIGINS: "${ALLOWED_ORIGINS:-http://localhost,http://localhost:3000}"
    command: sh -c "cp /init-nginx.sh /tmp/init-nginx.sh && chmod +x /tmp/init-nginx.sh && /tmp/init-nginx.sh"
    ports: 
      - "${NGINX_HTTPS_PORT:-443}:443"
      - "${NGINX_HTTP_PORT:-80}:80"    
    volumes: 
      - ./nginx/includes:/etc/nginx/includes
      - ./nginx/templates:/etc/nginx/templates:ro
      - ./nginx/nginx.conf:/etc/nginx/conf:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/init-nginx.sh:/init-nginx.sh:ro
    depends_on:
      app:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -k -f http://localhost:80/ping"]
      interval: 10s
      timeout: 5s 
      retries: 3

networks:
  app_network:
    driver: bridge      

volumes: 
  postgres_data: