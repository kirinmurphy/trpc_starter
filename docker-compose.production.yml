# NOTES: 
# API_PROTOCOL deafults to https but can be overriden in .env to test locally 

services:
  app: 
    build: 
      context: .
      target: production
      args: 
        DOCKER_BUILDKIT: 1
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
    ports: 
      - "${API_PORT}:${API_PORT}"
      - "4173:4173"
    environment:
      NODE_ENV: production
      # TODO: move to env variable 
      CLIENT_DOMAIN: "localhost"
      INTERNAL_CLIENT_URL: "${API_PROTOCOL:-https}://localhost:4173"
      VITE_API_URL: "${API_PROTOCOL:-https}://localhost:${API_PORT}"
      PORT: ${API_PORT}

      # DB
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: db

      # AUTH
      AUTH_TOKEN_SECRET: ${AUTH_TOKEN_SECRET}
      REFRESH_TOKEN_SECRET: ${REFRESH_TOKEN_SECRET}
    healthcheck:
      test: [
        "CMD-SHELL", 
        "curl -f ${API_PROTOCOL:-https}://localhost:${VITE_PORT} && curl -f '${API_PROTOCOL:-https}://localhost:${API_PORT}/ping?batch=1&input=%7B%7D'"
      ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s      
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:latest
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes: 
      - postgres_data:/var/lib/postgresql/postgres_data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5

  nginx: 
    image: nginx:alpine
    environment: 
      AUTH_RATE: "${AUTH_RATE:-2r/m}"
      VERIFY_RATE: "${VERIFY_RATE:-1r/m}"
      ALLOWED_ORIGINS: "https://some-website.com,https://api.some-website.com"
    command: sh -c "cp /init-nginx.sh /tmp/init-nginx.sh && chmod +x /tmp/init-nginx.sh && /tmp/init-nginx.sh"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/includes:/etc/nginx/includes
      - ./nginx/templates:/etc/nginx/templates:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./docker/init-nginx.sh:/init-nginx.sh:ro
    depends_on:
      - app

volumes: 
  postgres_data:
  