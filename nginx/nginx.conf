user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;

events {
  worker_connections 1024;
}

http {
  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  limit_req_zone $binary_remote_addr zone=auth_limit:10m rate=5r/m;
  limit_req_zone $binary_remote_addr zone=verify_limit:10m rate=3r/m;
  
  map $status $retry_after {
    429   60;
  }

  log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                  '$status $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for"';

  access_log /var/log/nginx/access.log main;
  sendfile on;
  keepalive_timeout 65;

  server {
    listen 80;
    server_name localhost;

    error_log /var/log/nginx/error.log debug;
    access_log /var/log/nginx/access.log main;

    location ~ ^/auth\.(createAccount|login|logout|refreshToken) {
      proxy_pass http://app:3000;
      include /etc/nginx/includes/proxy_headers.conf;
      include /etc/nginx/includes/cors_options.conf;

      # Rate limiting
      limit_req zone=auth_limit burst=3 nodelay;
      limit_req_status 429;
      add_header Retry-After $retry_after always;
      error_page 429 = @too_many_requests;
      
      include /etc/nginx/includes/pass_headers.conf;
    }

    location ~ ^/auth\.(verifyAccount|resendVerificationEmail) {
      proxy_pass http://app:3000;
      include /etc/nginx/includes/proxy_headers.conf;
      include /etc/nginx/includes/cors_options.conf;

      # Rate limiting
      limit_req zone=verify_limit burst=2 nodelay;
      limit_req_status 429;
      add_header Retry-After $retry_after always;
      error_page 429 = @too_many_requests;
      
      include /etc/nginx/includes/pass_headers.conf;
    }

    location ~ ^/auth\.(isAuthenticated|getUser) {
      proxy_pass http://app:3000;
      include /etc/nginx/includes/proxy_headers.conf;
      include /etc/nginx/includes/cors_options.conf;
      include /etc/nginx/includes/pass_headers.conf;
    }      

    location /ping {
      proxy_pass http://app:3000;
      include /etc/nginx/includes/proxy_headers.conf;
    }

    location / {
      proxy_pass http://app:5173;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header Host $host;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_cache_bypass $http_upgrade;
    }

    location @too_many_requests {
        default_type application/json;
        return 429 '[{"error":{"message":"Too many requests. Please try again later.","code":-32429,"data":{"code":"TOO_MANY_REQUESTS","httpStatus":429,"retryAfter":$retry_after}}}]';
    }
  }
}
