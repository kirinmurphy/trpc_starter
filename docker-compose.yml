services: 
  app:
    build: 
      context: .
      target: development
      args:
        DOCKER_BUILDKIT: 1
    volumes: 
      - .:/app
      - /app/node_modules
    logging: 
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: '3'
    expose:
      - "3000"
      - "5173"
    environment:
      CLIENT_DOMAIN: "localhost"
      INTERNAL_CLIENT_URL: "http://app:5173"  
      VITE_API_URL: "http://localhost"
      VITE_HOST: ${VITE_HOST:-0.0.0.0}
      API_HOST: ${API_HOST:-0.0.0.0}
      NODE_ENV: development
      PORT: ${API_PORT}
      # DB
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: db 
      # AUTH
      AUTH_TOKEN_SECRET: ${AUTH_TOKEN_SECRET}
      REFRESH_TOKEN_SECRET: ${REFRESH_TOKEN_SECRET}
      # OUTPUT
      DEBUG: "app:*"
    depends_on: 
      db:
        condition: service_healthy    

    healthcheck:
      test: [
        "CMD-SHELL",
        "curl -v -f http://0.0.0.0:${API_PORT}/ping || echo 'Health check failed with status $?'"
      ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 60s

    command: ./docker/init-app.sh

  db: 
    image: postgres:latest
    ports: 
      - "5433:5432"
    environment: 
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - TEST_DB_NAME=${TEST_DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    healthcheck: 
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  mailhog: 
    image: mailhog/mailhog:latest
    container_name: mailhog
    ports:
      - "1025:1025"
      - "8025:8025"

  nginx:
    image: nginx:alpine
    environment:
      AUTH_RATE: "${AUTH_RATE:-2r/m}"
      VERIFY_RATE: "${VERIFY_RATE:-1r/m}"
      ALLOWED_ORIGINS: "http://localhost:5173,http://localhost:3000"
    command: sh -c "cp /init-nginx.sh /tmp/init-nginx.sh && chmod +x /tmp/init-nginx.sh && /tmp/init-nginx.sh"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/includes:/etc/nginx/includes
      - ./nginx/templates:/etc/nginx/templates:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./docker/init-nginx.sh:/init-nginx.sh:ro
    depends_on:
      - app

volumes: 
  postgres_data: 
